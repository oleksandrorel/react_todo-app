{"version":3,"sources":["components/TodosContext/TodosContext.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodosContext","React","createContext","todos","setTodos","TodosProvider","children","useState","JSON","parse","localStorage","getItem","contextValue","useMemo","Provider","value","TodoItem","todo","useContext","editTodoId","setEditTodoId","title","editedTodoValue","setEditedTodoValue","changeTodo","property","map","todoEl","id","todoValue","completed","deleteTodo","filter","saveEditedTodo","key","trim","className","classnames","editing","onDoubleClick","onChange","type","checked","onClick","target","onKeyDown","onBlur","TodoList","todosStatus","every","pathname","useLocation","htmlFor","getVisibleTodos","FILTERS","TodosFilter","to","toLowerCase","exact","activeClassName","TodoApp","setTodo","todosLeft","setTodosLeft","useEffect","activeTodosLeft","length","setItem","stringify","onSubmit","e","preventDefault","prevTodos","Date","name","placeholder","hidden","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69a2d4e2.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst contextProps = {\n  todos: [],\n  setTodos: () => {},\n};\n\nexport const TodosContext = React.createContext(contextProps);\n\nexport const TodosProvider = ({ children }) => {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem('todos')) || [],\n  );\n\n  const contextValue = useMemo(() => ({\n    todos,\n    setTodos,\n  }), [todos, setTodos]);\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nTodosProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoItem = ({ todo }) => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const [editTodoId, setEditTodoId] = useState(0);\n  const [editedTodoValue, setEditedTodoValue] = useState(todo.title);\n\n  const changeTodo = property => (\n    setTodos(() => (\n      todos.map((todoEl) => {\n        if (todoEl.id !== todo.id) {\n          return todoEl;\n        }\n\n        const todoValue = property === 'title'\n          ? editedTodoValue\n          : !todoEl.completed;\n\n        return {\n          ...todoEl,\n          [property]: todoValue,\n        };\n      }))));\n\n  const deleteTodo = () => {\n    setTodos(() => (\n      todos.filter(todoEl => todoEl.id !== todo.id)\n    ));\n  };\n\n  const saveEditedTodo = (key) => {\n    if ((!editedTodoValue.trim() && key === 'Enter')\n      || (!editedTodoValue.trim() && key === 'Blur')) {\n      deleteTodo();\n    }\n\n    switch (key) {\n      case 'Escape':\n        return setEditTodoId(0);\n\n      case 'Enter':\n      case 'Blur':\n        changeTodo('title');\n        setEditedTodoValue(editedTodoValue.trim());\n\n        return setEditTodoId(0);\n\n      default:\n        return todo;\n    }\n  };\n\n  return (\n    <li\n      className={classnames({\n        completed: todo.completed,\n        editing: todo.id === editTodoId,\n      })}\n      onDoubleClick={\n        () => {\n          setEditTodoId(todo.id);\n        }\n      }\n    >\n      <div className=\"view\">\n        <input\n          onChange={() => {\n            changeTodo('completed');\n          }}\n          type=\"checkbox\"\n          checked={todo.completed}\n          className=\"toggle\"\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={deleteTodo}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editedTodoValue}\n        onChange={({ target }) => {\n          setEditedTodoValue(target.value);\n        }}\n        onKeyDown={({ key }) => {\n          saveEditedTodo(key);\n        }}\n        onBlur={() => {\n          saveEditedTodo('Blur');\n        }}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoList = () => {\n  const { todos, setTodos } = useContext(TodosContext);\n  const todosStatus = todos.every(todo => todo.completed);\n  const { pathname } = useLocation();\n\n  const changeTodosStatus = (value) => {\n    setTodos(() => (\n      todos.map(todoEl => ({\n        ...todoEl,\n        completed: value,\n      }))));\n  };\n\n  const getVisibleTodos = () => {\n    switch (pathname) {\n      case '/active':\n        return todos.filter(todo => !todo.completed);\n\n      case '/completed':\n        return todos.filter(todo => todo.completed);\n\n      default:\n        return todos;\n    }\n  };\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={todosStatus}\n        onChange={() => {\n          changeTodosStatus(!todosStatus);\n        }}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {getVisibleTodos().map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst FILTERS = ['All', 'Active', 'Completed'];\n\nexport const TodosFilter = () => (\n  <ul className=\"filters\">\n    {FILTERS.map(filter => (\n      <li key={filter}>\n        <NavLink\n          to={filter === 'All' ? '/' : `/${filter.toLowerCase()}`}\n          exact\n          activeClassName=\"selected\"\n        >\n          {filter}\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { TodoList } from '../TodoList';\nimport { TodosFilter } from '../TodosFilter';\nimport { TodosContext } from '../TodosContext';\n\nexport const TodoApp = () => {\n  const [todo, setTodo] = useState('');\n  const [todosLeft, setTodosLeft] = useState(0);\n  const { todos, setTodos } = useContext(TodosContext);\n\n  const handleTodoChange = ({ target }) => {\n    setTodo(target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (!todo.trim()) {\n      return setTodo('');\n    }\n\n    setTodos(prevTodos => (\n      [{\n        id: +new Date(),\n        title: todo.trim(),\n        completed: false,\n      }, ...prevTodos]\n    ));\n\n    return setTodo('');\n  };\n\n  const clearCompleted = () => {\n    setTodos(() => (\n      todos.filter(todoEl => !todoEl.completed)\n    ));\n  };\n\n  useEffect(() => {\n    const activeTodosLeft = todos.filter(todoEl => !todoEl.completed).length;\n\n    setTodosLeft(activeTodosLeft);\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={handleFormSubmit}>\n          <input\n            value={todo}\n            onChange={handleTodoChange}\n            name=\"todoItem\"\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n        {!!todos.length\n          && (\n            <>\n              <TodoList />\n              <footer className=\"footer\">\n                <span className=\"todo-count\">\n                  {todosLeft === 1\n                    ? `${todosLeft} item left`\n                    : `${todosLeft} items left`}\n                </span>\n\n                <TodosFilter />\n\n                <button\n                  type=\"button\"\n                  className=\"clear-completed\"\n                  hidden={!todos.some(todoEl => todoEl.completed)}\n                  onClick={clearCompleted}\n                >\n                  Clear completed\n                </button>\n\n              </footer>\n            </>\n          )\n        }\n      </header>\n\n    </section>\n\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { TodosProvider } from './components/TodosContext/TodosContext';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <TodosProvider>\n      <App />\n    </TodosProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}